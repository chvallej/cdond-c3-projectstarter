version: 2.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "./frontend/package-lock.json" }}
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm i
            npm run build
      - save_cache:
          key: v1-{{ checksum "./frontend/package-lock.json" }}
          paths:
            - ./frontend/node_modules

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "./backend/package-lock.json" }}
      - run:
          name: Back-end build
          command: |
            cd backend
            npm i
            npm run build
      - save_cache:
          key: v1-{{ checksum "./backend/package-lock.json" }}
          paths:
            - ./backend/node_modules

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "./frontend/package-lock.json" }}
      - run:
          name: Test front-end
          command: |
            cd frontend
            npm run test

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "./backend/package-lock.json" }}
      - run:
          name: Back-end test
          command: |
            cd backend
            npm test

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "./frontend/package-lock.json" }}
      - run:
          name: Scan front-end
          command: |
            cd frontend
            npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "./backend/package-lock.json" }}
      - run:
          name: Scan front-end
          command: |
            cd frontend
            npm audit --audit-level=critical

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
